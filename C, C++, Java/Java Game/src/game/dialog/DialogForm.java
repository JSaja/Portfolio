package hw5.dialog;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
/**
 * A form to let you test your dialogs. This class works, you don't need to
 * modify anything in it.
 * 
 * @author baylor
 */
public class DialogForm extends javax.swing.JFrame
{
	public String imageDirectory = "images/profiles/";          
	public String npcName = "Bob";             
	public String playerName = "Player";
	public DialogTree dialog;

	//--- Have to track this outside the editor pane because if you try to
	//---	append it you get the end HTML header from the previous text
	protected String fullDialogText = "";       

	public DialogForm()
	{
		//--- This should obviously be passed in                                                                   
                this.dialog = DialogFactory.getBobDialog();
                            
		initComponents();
		setLocationRelativeTo(null);
		setProfilePhoto("lawyer.jpg");
		setTitle("Talking to " + npcName);

		startConversation();
	}

	public void setProfilePhoto(String fileName)
	{
		String fullyQualifiedFileName = imageDirectory + fileName;
		try
		{
			Image image = ImageIO.read(new File(fullyQualifiedFileName));
			image = image.getScaledInstance(64, -1, Image.SCALE_SMOOTH);
			ImageIcon icon = new ImageIcon(image);
			imageLabel.setIcon(icon);
		}
		catch (IOException ex)
		{
			System.out.println("Error loading " + fullyQualifiedFileName);
			System.out.println("    " +ex);
		}
	}

	private void startConversation()
	{
		npcSays(dialog.getText());
		showOptions();
	}

	private void showOptions()
	{
		List<DialogOption> options = dialog.getOptions();
		DefaultListModel<DialogOptionDisplayWrapper> model =
				(DefaultListModel<DialogOptionDisplayWrapper>)responsesList.getModel();
		model.clear();
		for (int i = 0; i < options.size(); i++)
		{
			DialogOption option = options.get(i);
			DialogOptionDisplayWrapper listEntry =
					new DialogOptionDisplayWrapper(i, option);
			model.addElement(listEntry);
		}
	}

	private void npcSays(String text)
	{
		String fullText = "<font color=black><b>" + npcName + ":</b> " +
				text + "</font><p>";
		append(fullText);
	}

	private void playerSays(String text)
	{
		String fullText = "<font color=red><b>" + playerName + ":</b> " +
				text + "</font><p>";
		append(fullText);
	}

	private void append(String text)
	{
		fullDialogText = fullDialogText + text;
		dialogEditorPane.setText(fullDialogText);
	}

	private void reply(DialogOptionDisplayWrapper option)
	{
		playerSays(option.getOption().getText());
		dialog.giveAnswer(option.getID());
		String nextStatement = dialog.getText();
		if (null!=nextStatement)
		{
			npcSays(dialog.getText());
		}

		if (dialog.isConversationOver())
		{
			append("[Conversation ends]");
			DefaultListModel<DialogOptionDisplayWrapper> model =
					(DefaultListModel<DialogOptionDisplayWrapper>)responsesList.getModel();
			model.clear();
		}
		else
		{
			showOptions();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        dialogEditorPane = new javax.swing.JEditorPane();
        imageLabel = new javax.swing.JLabel();
        npcNameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        responsesList = new javax.swing.JList();
        replyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        dialogEditorPane.setEditable(false);
        dialogEditorPane.setContentType("text/html"); // NOI18N
        jScrollPane1.setViewportView(dialogEditorPane);

        imageLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        imageLabel.setMaximumSize(new java.awt.Dimension(64, 64));
        imageLabel.setMinimumSize(new java.awt.Dimension(64, 64));
        imageLabel.setPreferredSize(new java.awt.Dimension(64, 64));

        npcNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        npcNameLabel.setText("Bob's General Store");

        jLabel1.setText("Response");

        responsesList.setModel(new DefaultListModel<DialogOptionDisplayWrapper>());
        jScrollPane2.setViewportView(responsesList);

        replyButton.setText("Answer");
        replyButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                replyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(npcNameLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replyButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(npcNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(replyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void replyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_replyButtonActionPerformed
    {//GEN-HEADEREND:event_replyButtonActionPerformed
        DialogOptionDisplayWrapper selectedOption =
				(DialogOptionDisplayWrapper)responsesList.getSelectedValue();
		if (null==selectedOption)
		{
			return;
		}
		reply(selectedOption);
    }//GEN-LAST:event_replyButtonActionPerformed

	//<editor-fold defaultstate="collapsed" desc="generated properties">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane dialogEditorPane;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel npcNameLabel;
    private javax.swing.JButton replyButton;
    private javax.swing.JList responsesList;
    // End of variables declaration//GEN-END:variables
	//</editor-fold>}
}
